# template.yaml - Updated SAM Template
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Accounts Service - Pure Lambda Handlers'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
  
  DatabasePassword:
    Type: String
    NoEcho: true
    Default: dev123456
  
  JWTSecret:
    Type: String
    NoEcho: true
    Default: your-jwt-secret-key

Globals:
  Function:
    Runtime: python3.13
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        LOG_LEVEL: INFO
        JWT_SECRET: !Ref JWTSecret
        JWT_ALGORITHM: HS256

Resources:
  # Auth Functions
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.auth_handler.login_handler
      Description: User login
      Events:
        Login:
          Type: Api
          Properties:
            Path: /auth/login
            Method: POST

  ChangePasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.auth_handler.change_password_handler
      Description: Change user password
      Events:
        ChangePassword:
          Type: Api
          Properties:
            Path: /auth/change-password
            Method: POST

  GetCurrentUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.auth_handler.get_current_user_handler
      Description: Get current user info
      Events:
        GetCurrentUser:
          Type: Api
          Properties:
            Path: /auth/me
            Method: GET

  # User Management Functions
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.user_handler.create_user_handler
      Description: Create new user
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /users
            Method: POST

  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.user_handler.get_users_handler
      Description: Get users with pagination
      Events:
        GetUsers:
          Type: Api
          Properties:
            Path: /users
            Method: GET

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.user_handler.get_user_handler
      Description: Get user by ID
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /users/{user_id}
            Method: GET

  UpdateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.user_handler.update_user_handler
      Description: Update user
      Events:
        UpdateUser:
          Type: Api
          Properties:
            Path: /users/{user_id}
            Method: PUT

  DeleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.user_handler.delete_user_handler
      Description: Delete user
      Events:
        DeleteUser:
          Type: Api
          Properties:
            Path: /users/{user_id}
            Method: DELETE

  # Utility Functions
  HealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.health_handler.health_check_handler
      Description: Health check
      Events:
        HealthCheck:
          Type: Api
          Properties:
            Path: /health
            Method: GET


Outputs:
  AccountsApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${Environment}-accounts-api-url"
